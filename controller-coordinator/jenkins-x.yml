buildPack: maven
pipelineConfig:
  agent:
    image: maven-graalvm
  env:
    - name: PIPELINE_CODE
      value: co
    - name: _JAVA_OPTIONS
      value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms1000m -Xmx12000m
    - name: SONAR_TOKEN
      valueFrom:
        secretKeyRef:
          name: entando-jx-common-secret
          key: sonar.token
    - name: SONAR_GITHUB_TOKEN
      valueFrom:
        secretKeyRef:
          name: entando-jx-common-secret
          key: sonar.github.token
    - name: OWASPDB_USERNAME
      valueFrom:
        secretKeyRef:
          name: entando-jx-common-secret
          key: owaspdb.username
    - name: OWASPDB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: entando-jx-common-secret
          key: owaspdb.password
    - name: OWASPDB_URL
      valueFrom:
        secretKeyRef:
          name: entando-jx-common-secret
          key: owaspdb.url
    - name: GPG_PASSPHRASE
      valueFrom:
        secretKeyRef:
          name: entando-jx-common-secret
          key: gpg.passphrase
    - name: GPG_KEYNAME
      valueFrom:
        secretKeyRef:
          name: entando-jx-common-secret
          key: gpg.keyname
    - name: GPG_HOMEDIR
      valueFrom:
        secretKeyRef:
          name: entando-jx-common-secret
          key: gpg.homedir
    - name: EXECUTABLE_TYPE
      valueFrom:
        secretKeyRef:
          name: entando-jx-common-secret
          key: executable.type
    - name: ENTANDO_DEFAULT_ROUTING_SUFFIX
      valueFrom:
        secretKeyRef:
          name: entando-jx-common-secret
          key: default.routing.suffix
  pipelines:
    pullRequest:
      build:
        replace: true
        steps:
          - sh: mvn versions:set -DnewVersion=$PREVIEW_VERSION
            name: set-version
          - sh: git fetch origin
            name: fetch-full-repo
          - sh: >-
              if ! kubectl get clusterrolebinding ${REPO_NAME}-${PIPELINE_CODE}pr${PULL_NUMBER}-is-admin; then
                kubectl create clusterrolebinding ${REPO_NAME}-${PIPELINE_CODE}pr${PULL_NUMBER}-is-admin --clusterrole=cluster-admin --serviceaccount=${REPO_NAME}-${PIPELINE_CODE}pr${PULL_NUMBER}:default
              fi
            name: create-admin-rolebinding
          - sh: >-
              mvn clean verify sonar:sonar \
                -Pin-process-verification -P${EXECUTABLE_TYPE} \
                -Dsonar.login=${SONAR_TOKEN} \
                -Dsonar.pullrequest.key=${PULL_NUMBER} \
                -Dsonar.pullrequest.base=master \
                -Dsonar.pullrequest.branch=${BRANCH_NAME} \
                -Dsonar.pullrequest.provider=github \
                -Dsonar.pullrequest.vsts.token.secured=${SONAR_GITHUB_TOKEN} \
                -Dsonar.pullrequest.github.repository=${REPO_OWNER}/${REPO_NAME} \
                -DautoUpdate=false \
                -DconnectionString=${OWASPDB_URL} \
                -DdatabasePassword=${OWASPDB_PASSWORD} \
                -DdatabaseUser=${OWASPDB_USERNAME}
            name: mvn-verify
          - sh:  echo "This avoids unwanted kaniko command substitution" &&  skaffold build -p ${EXECUTABLE_TYPE} -f skaffold.yaml
            name: container-build
      promote:
        replace: true
        steps:
          - dir: charts/preview
            steps:
              - sh: make preview
                name: make-preview
              - sh: jx preview --app $APP_NAME --dir ../.. --namespace ${REPO_NAME}-${PIPELINE_CODE}pr${PULL_NUMBER}
                name: jx-preview
          - sh: >-
              mvn verify -Pinter-process-verification \
                -Dentando.k8s.operator.registry=${DOCKER_REGISTRY} \
                -Dentando.k8s.operator.tests.run.target=K8S \
                -Dentando.default.routing.suffix=${ENTANDO_DEFAULT_ROUTING_SUFFIX} \
                -Dentando.test.namespace.override=${REPO_NAME} \
                -Dentando.test.name.suffix=${PIPELINE_CODE}pr${PULL_NUMBER} \
                -Dentando.test.image.version=${PREVIEW_VERSION} \
            name: run-end-to-end-tests
    release:
      build:
        replace: true
        steps:
          - sh: git fetch origin
            name: fetch-full-repo
          - sh: mvn clean package -P${EXECUTABLE_TYPE}
#          - sh: >-
#              mvn clean deploy sonar:sonar \
#                -Pin-process-verification -P${EXECUTABLE_TYPE} \
#                -Pprepare-for-nexus \
#                -Dsonar.login=${SONAR_TOKEN} \
#                -DautoUpdate=false \
#                -DconnectionString=${OWASPDB_URL} \
#                -DdatabasePassword=${OWASPDB_PASSWORD} \
#                -DdatabaseUser=${OWASPDB_USERNAME} \
#                -Dgpg.homedir=${GPG_HOMEDIR} \
#                -Dgpg.keyname=${GPG_KEYNAME} \
#                -Dgpg.passphrase=${GPG_PASSPHRASE}
            name: mvn-deploy
          - sh: echo "This avoids unwanted kaniko command substitution"  &&  skaffold build -p ${EXECUTABLE_TYPE} -f skaffold.yaml
            name: container-build
      postBuild:
        replace: true
        steps:
          - sh: jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:\$(cat VERSION)
            name: post-build
          - sh: >-
              if ! kubectl get clusterrolebinding ${REPO_NAME}-${PIPELINE_CODE}ms-is-admin; then
                kubectl create clusterrolebinding ${REPO_NAME}-${PIPELINE_CODE}ms-is-admin --clusterrole=cluster-admin --serviceaccount=${REPO_NAME}-${PIPELINE_CODE}ms:default
              fi
            name: create-admin-rolebinding
          - dir: charts/preview
            steps:
              - sh: NAMESPACE_OVERRIDE=${REPO_NAME}-${PIPELINE_CODE}ms make preview
                name: make-preview
              - sh: jx preview --name ${REPO_NAME}-${PIPELINE_CODE}ms --app $APP_NAME --dir ../.. --namespace ${REPO_NAME}-${PIPELINE_CODE}ms
                name: jx-preview
          - sh: >-
              mvn verify -Pinter-process-verification \
                -Dentando.k8s.operator.registry=${DOCKER_REGISTRY} \
                -Dentando.k8s.operator.tests.run.target=K8S \
                -Dentando.default.routing.suffix=${ENTANDO_DEFAULT_ROUTING_SUFFIX} \
                -Dentando.test.namespace.override=${REPO_NAME} \
                -Dentando.test.name.suffix=${PIPELINE_CODE}ms \
                -Dentando.test.image.version=${VERSION}
            name: run-end-to-end-tests
      promote:
        replace: true
        steps:
          - sh: jx step changelog --version v\$(cat ../../VERSION)
            name: changelog
          - sh: >-
              kubectl patch configmap image-versions -n entando -p "{\"data\":{\"${APP_NAME}\":\"${VERSION}\",\"${APP_NAME}-executable-type\":\"${EXECUTABLE_TYPE}\"}}"
            name: update-image-map