{{- if .Values.knativeDeploy }}
{{- else }}
apiVersion: "{{- if .Values.supportOpenshift }}extensions/v1beta1{{- else }}apps/v1{{- end }}"
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      draft: {{ default "draft-app" .Values.draft }}
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "fullname" . }}
  {{- if .Values.podAnnotations }}
      annotations:
  {{ toYaml .Values.podAnnotations | indent 8 }}
  {{- end }}
    spec:
      serviceAccountName: entando-operator
      volumes:
  {{- if .Values.tls.tlsCrt }}
        - name: entando-tls-volume
          secret:
            secretName: entando-tls-secret
  {{- end }}
  {{- if .Values.tls.caCrt }}
        - name: entando-ca-cert-volume
          secret:
            secretName: entando-ca-cert-secret
  {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
  {{- if .Values.tls.tlsCrt }}
            - name: entando-tls-volume
              mountPath: /etc/entando/tls
  {{- end }}
  {{- if .Values.tls.caCrt }}
            - name: entando-ca-cert-volume
              mountPath: /etc/entando/ca
  {{- end}}
          env:
  {{- if .Values.tls.caCrt }}
            - name: ENTANDO_CA_CERT_PATHS
              value: "/etc/entando/ca/ca.crt"
  {{- end}}
  {{- if .Values.tls.tlsCrt }}
            - name: ENTANDO_PATH_TO_TLS_KEYPAIR
              value: "/etc/entando/tls"
  {{- end}}
            - name: ENTANDO_K8S_OPERATOR_SERVICEACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
  {{- range $pkey, $pval := .Values.env }}
            - name: {{ $pkey }}
              value: {{ quote $pval }}
  {{- end }}
          livenessProbe:
            exec:
              command:
                - cat
                - /tmp/EntandoControllerCoordinator.ready
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          readinessProbe:
            exec:
              command:
                - cat
                - /tmp/EntandoControllerCoordinator.ready
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          resources:
{{  .Values.resources | toYaml | trim | indent 12 }}
          terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
{{- end }}
