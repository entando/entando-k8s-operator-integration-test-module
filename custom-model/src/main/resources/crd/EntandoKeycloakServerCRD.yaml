apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: entandokeycloakservers.entando.org
spec:
  group: entando.org
  version: v1
  versions:
    - name: v1
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Phase
          type: string
          JSONPath: .status.entandoDeploymentPhase
        - name: Observed Generation
          type: number
          JSONPath: .status.observedGeneration
        - name: Age
          type: date
          JSONPath: .metadata.creationTimestamp
        - name: Host
          type: string
          JSONPath: .spec.ingressHostName
        - name: Image
          type: string
          JSONPath: .spec.standardImage
        - name: DBMS
          type: string
          JSONPath: .spec.dbms
        - name: Replicas
          type: integer
          JSONPath: .spec.replicas
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                replicas:
                  description: The number of pods that should participate in the cluster of Keycloak servers.
                  type: integer
                  minimum: 1
                  maximum: 10
                dbms:
                  description: >
                    The database management system (DBMS) to use for persistence of this Keycloak server. Can be any of mysql, oracle
                    postgresql or embedded. When 'embedded' is used, an in-process H2 database will be used and mounted on
                    a persistent volume. Since the supporting database files can only be opened by one process at a time,
                    only 1 replica can be supported when the value is 'embedded'. If an EntandoDatabaseService has been
                    deployed in this EntandoKeycloakServer's namespace, and the DBMS specified on this EntandoDatabaseService
                    is the same as the DBMS specified on this EntandoKeycloakServer, the Entando Operator will create a dedicated
                    schema (in the case of PostgreSQL or Oracle), or a database in the case of MySQL for this EntandoKeycloakServer
                    to persist its data. If a matching EntandoDatabaseService does not exist in this namespace, the Entando Operator
                    will automatically deploy the appropriate container to host the DBMS specified. This last option is not
                    yet supported for Oracle
                  type: string
                  pattern: '^(mysql|oracle|postgresql|embedded|none)$'
                ingressHostName:
                  description: >
                    The hostname that will be used to access this Keycloak service from outside the cluster. The Entando
                    Operator will create an Ingress reflecting this hostname, and expose Keycloak on the '/auth' path on
                    this host. If omitted, the Entando Operator will automatically generate a hostname using the value of
                    the ENTANDO_DEFAULT_ROUTING_SUFFIX environment variable that the Entando Operator was configured with.
                    It will prefix the name and namespace of the EntandoKeycloakServer to this default routing suffix.
                  type: string
                  pattern: '^([A-Za-z0-9-]{1,63}\.)*[[A-Za-z0-9-]{1,63}$'
                tlsSecretName:
                  description: >
                    The name of a standard Kubernetes TLS Secret, assumed to be in the same Namespace as the EntandoKeycloakServer
                    being created. This Secret is expected to have a private key, and a certificate for the hostname that
                    the Keycloak service will be exposed on. Please refer to the 'ingressHostname' property for more
                    information on how the hostname is determined. If absent, the Entando Operator will evaluate the
                    value of the ENTANDO_PATH_TO_TLS_KEYPAIR which is expected to contain two files: tls.key and tls.crt.
                    If a keypair is found in the folder specified, it will revert to the keypair found. Alternatively,
                    the Entando Operator will evaluate the value of the ENTANDO_USE_AUTO_CERT_GENERATION. If set to 'true'
                    the Entando Operator will assume that the cluster has been configured with a valid CA and leave it to
                    the Ingress controller in use to generate its own certificates.
                  type: string
                  pattern: '^([a-z])+([a-z0-9-\.])*[a-z0-9]$'
                serviceAccountToUse:
                  description: >
                    The Kubernetes ServiceAccount in the Namespace of the EntandoKeycloakServer that is to be used for
                    the Pods hosting the Keycloak services. Can be left empty for
                    most situations, as the Keycloak service doesn't make direct use of Kubernetes resources.
                  type: string
                  pattern: '^([a-z])+([a-z0-9-\.])*[a-z0-9]$'
                environmentVariables:
                  description: >
                    A list of environment variable following the standard structure of Kubernetes Environment Variables
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                      valueFrom:
                        type: object
                        properties:
                          configMapKeyRef:
                            type: object
                            properties:
                              name:
                                description: Name of a ConfigMap in the same namespace as the EntandoKeycloakServer
                                type: string
                              key:
                                description: Key of the ConfigMap entry in that holds the value to be used for the EnvironmentVariable
                                type: string
                          fieldRef:
                            type: object
                            properties:
                              apiVersion:
                                description: Version of the API to used for the field expression
                                type: string
                              fieldPath:
                                description: Full expression starting from the Pod resource
                                type: string
                          resourceFieldRef:
                            type: object
                            properties:
                              containerName:
                                description: Name of the container to use
                                type: string
                              resource:
                                description: Name of the resource to use
                                type: string
                          secretKeyRef:
                            type: object
                            properties:
                              name:
                                description: Name of a Secret in the same namespace as the EntandoKeycloakServer
                                type: string
                              key:
                                description: Key of the Secret entry in that holds the value to be used for the EnvironmentVariable
                                type: string
                resourceRequirements:
                  description: >
                    The projected resource requirements of the given Keycloak deployment. Specifies the limits that the
                    container is expected to respect, and the size of requests that will be initiated on behalf of the
                    container. When omitted our known defaults will be applied.
                  type: object
                  properties:
                    storageRequest:
                      description: >
                        Size of persistent storage that will be requested when deployed. Can be omitted. Supported only
                        by a small subset of Kubernetes storage providers.
                      type: string
                    storageLimit:
                      description: >
                        The maximum amount of persistent storage require by the Keycloak server. Only relevant
                        if the 'embedded' DBMS option is used. Limits and requests for memory are measured in bytes. You can
                        express storage as a plain integer using one of these suffixes: T, G, M, K. You can also
                        use the power-of-two equivalents: Ti, Gi, Mi, Ki.
                      type: string
                    memoryRequest:
                      description: >
                        The amount of memory that will be requested when deployed. A pod will only be deployed to a node
                        that has this amount of memory available. You can  express memory as a plain integer using one of
                        these suffixes: T, G, M, K. You can also use the power-of-two equivalents: Ti, Gi, Mi, Ki.
                      type: string
                    memoryLimit:
                      description: >
                        The maximum amount of memory that the container is expected to use. Kubernetes will limit the amount
                        of memory to the container the to amount specified. You can  express memory as a plain integer using one of
                        these suffixes: T, G, M, K. You can also use the power-of-two equivalents: Ti, Gi, Mi, Ki.
                      type: string
                    cpuRequest:
                      description: >
                        The amount of CPU units that will be requested from a node at deployment time. A pod will only be
                        deployed to a node if the node has this amount of CPU units available. Supports decimal numbers, or
                        alternatively the suffix 'm' can be used to specify a milicore. Precision lower than 1m is not supported.
                      type: string
                    cpuLimit:
                      description: >
                        The maximum amount of CPU units that will be required by the container.Supports decimal numbers, or
                        alternatively the suffix 'm' can be used to specify a milicore. Precision lower than 1m is not supported.
                      type: string
                    fileUploadLimit:
                      description: >
                        The maximum file upload size. This limit will be enforced by NGINX compliant Ingress controllers.
                        The suffix 'm' allows the limit to be specified in megabytes, eg. '120m'.
                      type: string
                customImage:
                  description: >
                    The full URI of a custom image provided by the deployer. This image needs to be based on the appropriate
                    base image: either entando/entando-keycloak or entando/entando-redhat-sso
                  type: string
                frontEndUrl:
                  description: >
                    The URL that will be used to access Keycloak from web applications.
                  type: string
                isDefault:
                  description: >
                    Set this property to 'true' if this Keycloak instance is to be used by the deployments of other
                    Entando custom resource when they do not specify it themselves.
                  type: boolean
                standardImage:
                  description: >
                    One of the standard images for Keycloak provided by Entando. The value can be either 'keycloak' or
                    'redhat-sso'. Please not that, when the Entando Operator runs in certified Red Hat mode, it will
                    always use the 'redhat-sso' image. This can be controlled by setting the environment variable
                    ENTANDO_K8S_OPERATOR_COMPLIANCE_MODE on the Entando Operator to one of COMMUNITY or REDHAT
                  type: string
                  pattern: '^(keycloak|redhat-sso)$'
            status:
              type: object
              properties:
                observedGeneration:
                  type: number
                entandoDeploymentPhase:
                  type: string
                serverStatuses:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
  names:
    kind: EntandoKeycloakServer
    plural: entandokeycloakservers
    shortNames:
      - ekcs
  scope: Namespaced
  subresources:
    status: {}
